# Generated by Django 5.0 on 2025-08-28 10:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_initial'),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='admin_institutes',
            field=models.ManyToManyField(blank=True, related_name='administered_by', to='tenants.tenant', verbose_name='Institutes Administered'),
        ),
        migrations.AddField(
            model_name='user',
            name='admin_level',
            field=models.CharField(choices=[('super_admin', 'Super Administrator'), ('system_admin', 'System Administrator'), ('institute_admin', 'Institute Administrator'), ('department_admin', 'Department Administrator'), ('faculty_admin', 'Faculty Administrator'), ('none', 'No Admin Rights')], default='none', max_length=20),
        ),
        migrations.AddField(
            model_name='user',
            name='can_manage_admins',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='can_manage_billing',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='can_manage_institutes',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='can_manage_security',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='can_manage_settings',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='can_manage_tenants',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='can_manage_users',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='can_view_analytics',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_type',
            field=models.CharField(choices=[('super_admin', 'Super Administrator'), ('admin', 'Administrator'), ('institute_admin', 'Institute Administrator'), ('teacher', 'Teacher'), ('student', 'Student'), ('parent', 'Parent'), ('staff', 'Staff')], default='student', max_length=20),
        ),
        migrations.CreateModel(
            name='AdminRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('role_type', models.CharField(choices=[('super_admin', 'Super Administrator'), ('system_admin', 'System Administrator'), ('institute_admin', 'Institute Administrator'), ('department_admin', 'Department Administrator'), ('faculty_admin', 'Faculty Administrator'), ('custom', 'Custom Role')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('can_manage_users', models.BooleanField(default=False)),
                ('can_manage_admins', models.BooleanField(default=False)),
                ('can_manage_institutes', models.BooleanField(default=False)),
                ('can_manage_tenants', models.BooleanField(default=False)),
                ('can_view_analytics', models.BooleanField(default=False)),
                ('can_manage_settings', models.BooleanField(default=False)),
                ('can_manage_billing', models.BooleanField(default=False)),
                ('can_manage_security', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicable_institutes', models.ManyToManyField(blank=True, related_name='admin_roles', to='tenants.tenant', verbose_name='Applicable Institutes')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_admin_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin Role',
                'verbose_name_plural': 'Admin Roles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AdminAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_assignments_given', to=settings.AUTH_USER_MODEL)),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_assignments', to='tenants.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_assignments', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='accounts.adminrole')),
            ],
            options={
                'verbose_name': 'Admin Assignment',
                'verbose_name_plural': 'Admin Assignments',
                'ordering': ['-assigned_at'],
                'unique_together': {('user', 'role', 'institute')},
            },
        ),
    ]
