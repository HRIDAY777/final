# Generated by Django 5.0 on 2025-08-23 11:34

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_id', models.CharField(max_length=20, unique=True)),
                ('full_name', models.CharField(max_length=200)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('date_of_birth', models.DateField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=10)),
                ('country', models.CharField(default='India', max_length=100)),
                ('license_number', models.CharField(max_length=20, unique=True)),
                ('license_type', models.CharField(max_length=50)),
                ('license_issued_date', models.DateField()),
                ('license_expiry_date', models.DateField()),
                ('joining_date', models.DateField()),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('retired', 'Retired')], default='active', max_length=20)),
                ('experience_years', models.PositiveIntegerField(default=0)),
                ('emergency_contact_name', models.CharField(max_length=200)),
                ('emergency_contact_phone', models.CharField(max_length=20)),
                ('emergency_contact_relation', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_number', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_location', models.CharField(max_length=200)),
                ('end_location', models.CharField(max_length=200)),
                ('distance_km', models.DecimalField(decimal_places=2, max_digits=6)),
                ('estimated_duration_minutes', models.PositiveIntegerField()),
                ('stops', models.JSONField(default=list)),
                ('fare_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['route_number'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_number', models.CharField(max_length=20, unique=True)),
                ('registration_number', models.CharField(max_length=20, unique=True)),
                ('vehicle_type', models.CharField(choices=[('bus', 'Bus'), ('van', 'Van'), ('car', 'Car'), ('minibus', 'Mini Bus'), ('truck', 'Truck'), ('other', 'Other')], default='bus', max_length=20)),
                ('make', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('capacity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('electric', 'Electric'), ('hybrid', 'Hybrid'), ('cng', 'CNG'), ('lpg', 'LPG')], default='diesel', max_length=20)),
                ('fuel_efficiency', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Under Maintenance'), ('inactive', 'Inactive'), ('retired', 'Retired')], default='active', max_length=20)),
                ('purchase_date', models.DateField()),
                ('insurance_expiry', models.DateField()),
                ('permit_expiry', models.DateField()),
                ('fitness_expiry', models.DateField()),
                ('puc_expiry', models.DateField()),
                ('current_mileage', models.PositiveIntegerField(default=0)),
                ('last_service_date', models.DateField(blank=True, null=True)),
                ('next_service_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('features', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['vehicle_number'],
            },
        ),
        migrations.CreateModel(
            name='TransportSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_fare_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('max_trip_delay_minutes', models.PositiveIntegerField(default=15)),
                ('auto_assign_routes', models.BooleanField(default=False)),
                ('require_driver_approval', models.BooleanField(default=True)),
                ('notify_parents_on_delay', models.BooleanField(default=True)),
                ('maintenance_reminder_days', models.PositiveIntegerField(default=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_id', models.CharField(max_length=20, unique=True)),
                ('trip_type', models.CharField(choices=[('pickup', 'Pickup'), ('drop', 'Drop'), ('round_trip', 'Round Trip')], default='round_trip', max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('delayed', 'Delayed')], default='scheduled', max_length=20)),
                ('scheduled_departure', models.DateTimeField()),
                ('scheduled_arrival', models.DateTimeField()),
                ('actual_departure', models.DateTimeField(blank=True, null=True)),
                ('actual_arrival', models.DateTimeField(blank=True, null=True)),
                ('start_location', models.CharField(max_length=200)),
                ('end_location', models.CharField(max_length=200)),
                ('distance_covered', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('fuel_consumed', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('total_passengers', models.PositiveIntegerField(default=0)),
                ('max_capacity', models.PositiveIntegerField()),
                ('total_fare_collected', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('expenses', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='transport.driver')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='transport.route')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='transport.vehicle')),
            ],
            options={
                'ordering': ['-scheduled_departure'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('routine', 'Routine Service'), ('repair', 'Repair'), ('emergency', 'Emergency'), ('inspection', 'Inspection')], max_length=20)),
                ('description', models.TextField()),
                ('service_date', models.DateField()),
                ('next_service_date', models.DateField(blank=True, null=True)),
                ('mileage_at_service', models.PositiveIntegerField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('service_provider', models.CharField(max_length=200)),
                ('parts_replaced', models.JSONField(blank=True, default=list)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='transport.vehicle')),
            ],
            options={
                'ordering': ['-service_date'],
            },
        ),
        migrations.CreateModel(
            name='FuelRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_date', models.DateField()),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('electric', 'Electric'), ('hybrid', 'Hybrid'), ('cng', 'CNG'), ('lpg', 'LPG')], max_length=20)),
                ('quantity_liters', models.DecimalField(decimal_places=2, max_digits=8)),
                ('cost_per_liter', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('mileage_at_fuel', models.PositiveIntegerField()),
                ('fuel_station', models.CharField(max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fuel_records', to='transport.vehicle')),
            ],
            options={
                'ordering': ['-fuel_date'],
            },
        ),
        migrations.CreateModel(
            name='StudentTransport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_location', models.CharField(max_length=200)),
                ('drop_location', models.CharField(max_length=200)),
                ('pickup_time', models.TimeField()),
                ('drop_time', models.TimeField()),
                ('fare_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_assignments', to='transport.route')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transport_assignments', to='students.student')),
            ],
            options={
                'ordering': ['student__user__first_name', 'student__user__last_name'],
                'unique_together': {('student', 'route')},
            },
        ),
        migrations.CreateModel(
            name='TripPassenger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_location', models.CharField(max_length=200)),
                ('drop_location', models.CharField(max_length=200)),
                ('fare_paid', models.DecimalField(decimal_places=2, max_digits=8)),
                ('pickup_time', models.DateTimeField(blank=True, null=True)),
                ('drop_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('picked_up', 'Picked Up'), ('dropped', 'Dropped'), ('absent', 'Absent')], default='scheduled', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trip_passengers', to='students.student')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passengers', to='transport.trip')),
            ],
            options={
                'ordering': ['trip', 'student__user__first_name', 'student__user__last_name'],
                'unique_together': {('trip', 'student')},
            },
        ),
    ]
