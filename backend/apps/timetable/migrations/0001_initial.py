# Generated by Django 5.0 on 2025-08-23 11:34

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academic_years', '0001_initial'),
        ('classes', '0001_initial'),
        ('subjects', '0001_initial'),
        ('teachers', '0001_initial'),
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('room_number', models.CharField(max_length=20, unique=True)),
                ('room_type', models.CharField(choices=[('classroom', 'Classroom'), ('laboratory', 'Laboratory'), ('computer_lab', 'Computer Lab'), ('library', 'Library'), ('auditorium', 'Auditorium'), ('gymnasium', 'Gymnasium'), ('music_room', 'Music Room'), ('art_room', 'Art Room'), ('conference_room', 'Conference Room'), ('other', 'Other')], default='classroom', max_length=20)),
                ('capacity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('building', models.CharField(blank=True, max_length=100)),
                ('floor', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('facilities', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['building', 'floor', 'room_number'],
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('schedule_type', models.CharField(choices=[('regular', 'Regular Schedule'), ('exam', 'Exam Schedule'), ('special', 'Special Schedule'), ('holiday', 'Holiday Schedule')], default='regular', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_years.academicyear')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ClassSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='classes.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subjects.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachers.teacher')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable.room')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_schedules', to='timetable.schedule')),
            ],
            options={
                'ordering': ['time_slot__day_of_week', 'time_slot__start_time'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('moved', 'Moved'), ('substituted', 'Substituted')], max_length=20)),
                ('old_data', models.JSONField(blank=True, default=dict)),
                ('new_data', models.JSONField(blank=True, default=dict)),
                ('reason', models.TextField(blank=True)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('class_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='timetable.classschedule')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='timetable.schedule')),
            ],
            options={
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleConflict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conflict_type', models.CharField(choices=[('room_conflict', 'Room Conflict'), ('teacher_conflict', 'Teacher Conflict'), ('class_conflict', 'Class Conflict'), ('time_conflict', 'Time Conflict')], max_length=20)),
                ('description', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('class_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts', to='timetable.classschedule')),
                ('conflicting_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicted_by', to='timetable.classschedule')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts', to='timetable.schedule')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('schedule_change', 'Schedule Change'), ('conflict_resolved', 'Conflict Resolved'), ('new_schedule', 'New Schedule'), ('reminder', 'Reminder')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('class_schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='timetable.classschedule')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='timetable.schedule')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_start_time', models.TimeField(default='08:00')),
                ('default_end_time', models.TimeField(default='16:00')),
                ('break_duration', models.PositiveIntegerField(default=15, help_text='Break duration in minutes')),
                ('lunch_duration', models.PositiveIntegerField(default=60, help_text='Lunch duration in minutes')),
                ('max_periods_per_day', models.PositiveIntegerField(default=8)),
                ('allow_weekend_classes', models.BooleanField(default=False)),
                ('auto_resolve_conflicts', models.BooleanField(default=False)),
                ('notify_on_changes', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_years.academicyear')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('day_of_week', 'start_time', 'end_time')},
            },
        ),
        migrations.AddField(
            model_name='classschedule',
            name='time_slot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable.timeslot'),
        ),
        migrations.CreateModel(
            name='TemplateSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classes.class')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable.room')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subjects.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachers.teacher')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template_schedules', to='timetable.scheduletemplate')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable.timeslot')),
            ],
            options={
                'ordering': ['time_slot__day_of_week', 'time_slot__start_time'],
                'unique_together': {('template', 'class_obj', 'time_slot')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='classschedule',
            unique_together={('schedule', 'class_obj', 'time_slot')},
        ),
    ]
