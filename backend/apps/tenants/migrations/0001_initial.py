# Generated by Django 5.0 on 2025-08-23 11:34

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Module Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Module Slug')),
                ('category', models.CharField(choices=[('core', 'Core'), ('academic', 'Academic'), ('administrative', 'Administrative'), ('communication', 'Communication'), ('analytics', 'Analytics'), ('finance', 'Finance'), ('library', 'Library'), ('transport', 'Transport'), ('hostel', 'Hostel'), ('health', 'Health'), ('extracurricular', 'Extracurricular')], default='core', max_length=20)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon')),
                ('color', models.CharField(default='#3B82F6', max_length=7, verbose_name='Color')),
                ('is_core', models.BooleanField(default=False, verbose_name='Is Core Module')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sort Order')),
                ('features', models.JSONField(default=dict, verbose_name='Features')),
                ('permissions', models.JSONField(default=list, verbose_name='Permissions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('cancelled', 'Cancelled'), ('expired', 'Expired'), ('suspended', 'Suspended'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('lifetime', 'Lifetime')], default='monthly', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('start_date', models.DateTimeField(verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True, verbose_name='Trial Ends At')),
                ('payment_method', models.CharField(blank=True, max_length=50, verbose_name='Payment Method')),
                ('payment_status', models.CharField(default='pending', max_length=20, verbose_name='Payment Status')),
                ('transaction_id', models.CharField(blank=True, max_length=255, verbose_name='Transaction ID')),
                ('auto_renew', models.BooleanField(default=True, verbose_name='Auto Renew')),
                ('next_billing_date', models.DateTimeField(blank=True, null=True, verbose_name='Next Billing Date')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Plan Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Plan Slug')),
                ('plan_type', models.CharField(choices=[('basic', 'Basic'), ('standard', 'Standard'), ('premium', 'Premium'), ('enterprise', 'Enterprise'), ('custom', 'Custom')], default='basic', max_length=20)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('price_monthly', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monthly Price')),
                ('price_quarterly', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quarterly Price')),
                ('price_yearly', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Yearly Price')),
                ('price_lifetime', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Lifetime Price')),
                ('max_students', models.PositiveIntegerField(default=100, verbose_name='Max Students')),
                ('max_teachers', models.PositiveIntegerField(default=20, verbose_name='Max Teachers')),
                ('max_storage_gb', models.PositiveIntegerField(default=10, verbose_name='Max Storage (GB)')),
                ('trial_days', models.PositiveIntegerField(default=14, verbose_name='Trial Days')),
                ('features', models.JSONField(default=dict, verbose_name='Features')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Is Popular')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sort Order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'ordering': ['sort_order', 'price_monthly'],
            },
        ),
        migrations.CreateModel(
            name='BillingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payment_method', models.CharField(blank=True, max_length=50, verbose_name='Payment Method')),
                ('transaction_id', models.CharField(blank=True, max_length=255, verbose_name='Transaction ID')),
                ('invoice_number', models.CharField(blank=True, max_length=100, verbose_name='Invoice Number')),
                ('billing_date', models.DateTimeField(verbose_name='Billing Date')),
                ('due_date', models.DateTimeField(verbose_name='Due Date')),
                ('paid_date', models.DateTimeField(blank=True, null=True, verbose_name='Paid Date')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billing_history', to='tenants.subscription')),
            ],
            options={
                'verbose_name': 'Billing History',
                'verbose_name_plural': 'Billing History',
                'ordering': ['-billing_date'],
            },
        ),
        migrations.AddField(
            model_name='subscription',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='tenants.subscriptionplan'),
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Organization Name')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Organization Slug')),
                ('domain', models.CharField(max_length=255, unique=True, verbose_name='Domain')),
                ('subdomain', models.CharField(max_length=255, unique=True, verbose_name='Subdomain')),
                ('tenant_type', models.CharField(choices=[('school', 'School'), ('college', 'College'), ('university', 'University'), ('training_center', 'Training Center'), ('corporate', 'Corporate')], default='school', max_length=20)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='tenants/logos/')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('email', models.EmailField(max_length=254, verbose_name='Contact Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='State')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('subscription_status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('cancelled', 'Cancelled'), ('trial', 'Trial'), ('expired', 'Expired')], default='trial', max_length=20)),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True)),
                ('subscription_ends_at', models.DateTimeField(blank=True, null=True)),
                ('max_students', models.PositiveIntegerField(default=100, verbose_name='Max Students')),
                ('max_teachers', models.PositiveIntegerField(default=20, verbose_name='Max Teachers')),
                ('max_storage_gb', models.PositiveIntegerField(default=10, verbose_name='Max Storage (GB)')),
                ('current_storage_gb', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Current Storage (GB)')),
                ('timezone', models.CharField(default='UTC', max_length=50, verbose_name='Timezone')),
                ('language', models.CharField(default='en', max_length=10, verbose_name='Language')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tenants', to=settings.AUTH_USER_MODEL)),
                ('subscription_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenants.subscriptionplan')),
            ],
            options={
                'verbose_name': 'Tenant',
                'verbose_name_plural': 'Tenants',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='subscription',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_subscriptions', to='tenants.tenant'),
        ),
        migrations.CreateModel(
            name='PlanModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_included', models.BooleanField(default=True, verbose_name='Is Included')),
                ('is_limited', models.BooleanField(default=False, verbose_name='Is Limited')),
                ('limit_value', models.PositiveIntegerField(blank=True, null=True, verbose_name='Limit Value')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_modules', to='tenants.module')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_modules', to='tenants.subscriptionplan')),
            ],
            options={
                'verbose_name': 'Plan Module',
                'verbose_name_plural': 'Plan Modules',
                'unique_together': {('plan', 'module')},
            },
        ),
        migrations.CreateModel(
            name='FeatureFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Feature Name')),
                ('is_enabled', models.BooleanField(default=False, verbose_name='Is Enabled')),
                ('settings', models.JSONField(default=dict, verbose_name='Settings')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_flags', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Feature Flag',
                'verbose_name_plural': 'Feature Flags',
                'unique_together': {('tenant', 'name')},
            },
        ),
        migrations.CreateModel(
            name='TenantModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Is Enabled')),
                ('is_limited', models.BooleanField(default=False, verbose_name='Is Limited')),
                ('limit_value', models.PositiveIntegerField(blank=True, null=True, verbose_name='Limit Value')),
                ('current_usage', models.PositiveIntegerField(default=0, verbose_name='Current Usage')),
                ('settings', models.JSONField(default=dict, verbose_name='Module Settings')),
                ('enabled_at', models.DateTimeField(auto_now_add=True)),
                ('disabled_at', models.DateTimeField(blank=True, null=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_modules', to='tenants.module')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_modules', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Tenant Module',
                'verbose_name_plural': 'Tenant Modules',
                'unique_together': {('tenant', 'module')},
            },
        ),
        migrations.CreateModel(
            name='UsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100, verbose_name='Action')),
                ('resource_type', models.CharField(max_length=50, verbose_name='Resource Type')),
                ('resource_id', models.CharField(blank=True, max_length=255, verbose_name='Resource ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('metadata', models.JSONField(default=dict, verbose_name='Metadata')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='tenants.module')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Usage Log',
                'verbose_name_plural': 'Usage Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['tenant', 'module', 'created_at'], name='tenants_usa_tenant__59bfc0_idx'), models.Index(fields=['action', 'resource_type'], name='tenants_usa_action_579da8_idx')],
            },
        ),
    ]
