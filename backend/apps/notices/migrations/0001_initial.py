# Generated by Django 5.0 on 2025-08-23 11:34

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('classes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NoticeCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('color', models.CharField(default='#3B82F6', max_length=7, verbose_name='Color')),
                ('icon', models.CharField(default='bell', max_length=50, verbose_name='Icon')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Notice Category',
                'verbose_name_plural': 'Notice Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('summary', models.TextField(blank=True, verbose_name='Summary')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20, verbose_name='Priority')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived'), ('expired', 'Expired')], default='draft', max_length=20, verbose_name='Status')),
                ('target_audience', models.CharField(choices=[('all', 'All Users'), ('students', 'Students Only'), ('teachers', 'Teachers Only'), ('parents', 'Parents Only'), ('staff', 'Staff Only'), ('specific_class', 'Specific Class'), ('specific_grade', 'Specific Grade'), ('custom', 'Custom Selection')], default='all', max_length=20, verbose_name='Target Audience')),
                ('publish_date', models.DateTimeField(verbose_name='Publish Date')),
                ('expiry_date', models.DateTimeField(blank=True, null=True, verbose_name='Expiry Date')),
                ('requires_approval', models.BooleanField(default=False, verbose_name='Requires Approval')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('send_email', models.BooleanField(default=True, verbose_name='Send Email')),
                ('send_sms', models.BooleanField(default=False, verbose_name='Send SMS')),
                ('send_push', models.BooleanField(default=True, verbose_name='Send Push Notification')),
                ('pin_to_top', models.BooleanField(default=False, verbose_name='Pin to Top')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Views Count')),
                ('read_count', models.PositiveIntegerField(default=0, verbose_name='Read Count')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Published At')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_notices', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authored_notices', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('target_classes', models.ManyToManyField(blank=True, to='classes.class', verbose_name='Target Classes')),
                ('target_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Target Users')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notices.noticecategory', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Notice',
                'verbose_name_plural': 'Notices',
                'ordering': ['-publish_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NoticeAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='notices/attachments/', verbose_name='File')),
                ('filename', models.CharField(max_length=255, verbose_name='Filename')),
                ('file_size', models.PositiveIntegerField(verbose_name='File Size (bytes)')),
                ('file_type', models.CharField(max_length=100, verbose_name='File Type')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='notices.notice', verbose_name='Notice')),
            ],
            options={
                'verbose_name': 'Notice Attachment',
                'verbose_name_plural': 'Notice Attachments',
            },
        ),
        migrations.CreateModel(
            name='NoticeTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Template Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('subject', models.CharField(max_length=200, verbose_name='Subject')),
                ('content', models.TextField(verbose_name='Content')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notices.noticecategory', verbose_name='Category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_notice_templates', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Notice Template',
                'verbose_name_plural': 'Notice Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NoticeRecipient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email_sent', models.BooleanField(default=False, verbose_name='Email Sent')),
                ('sms_sent', models.BooleanField(default=False, verbose_name='SMS Sent')),
                ('push_sent', models.BooleanField(default=False, verbose_name='Push Sent')),
                ('is_read', models.BooleanField(default=False, verbose_name='Is Read')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='notices.notice', verbose_name='Notice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_notices', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Notice Recipient',
                'verbose_name_plural': 'Notice Recipients',
                'unique_together': {('notice', 'user')},
            },
        ),
    ]
