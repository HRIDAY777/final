# Generated by Django 5.0 on 2025-08-28 10:10

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('parameters', models.JSONField(default=dict, help_text='Parameters used to generate this report')),
                ('data_summary', models.JSONField(default=dict, help_text='Summary of data included in the report')),
                ('file_path', models.CharField(blank=True, help_text='Path to the generated report file', max_length=500)),
                ('file_size', models.BigIntegerField(default=0, help_text='Size of the generated file in bytes')),
                ('file_format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON'), ('html', 'HTML')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress', models.IntegerField(default=0, help_text='Generation progress percentage')),
                ('error_message', models.TextField(blank=True, help_text='Error message if generation failed')),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_time', models.DurationField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Generated Report',
                'verbose_name_plural': 'Generated Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportAccessLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('view', 'View'), ('download', 'Download'), ('share', 'Share'), ('schedule', 'Schedule'), ('generate', 'Generate')], max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='reports.generatedreport')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_access_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Access Log',
                'verbose_name_plural': 'Report Access Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ReportCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#3B82F6', help_text='Hex color code for the category', max_length=7)),
                ('icon', models.CharField(blank=True, help_text='Icon class or identifier', max_length=50)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_categories', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='reports.reportcategory')),
            ],
            options={
                'verbose_name': 'Report Category',
                'verbose_name_plural': 'Report Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('is_public', models.BooleanField(default=True, help_text='Whether this comment is visible to all report viewers')),
                ('annotation_data', models.JSONField(blank=True, default=dict, help_text='Annotation data (e.g., highlighted text, coordinates)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='reports.generatedreport')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Comment',
                'verbose_name_plural': 'Report Comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportDashboard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('layout_config', models.JSONField(default=dict, help_text='Dashboard layout configuration')),
                ('widget_configs', models.JSONField(default=list, help_text='Configuration for dashboard widgets')),
                ('is_public', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(blank=True, related_name='dashboards', to='reports.reportcategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_report_dashboards', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_dashboards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Dashboard',
                'verbose_name_plural': 'Report Dashboards',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportExport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON'), ('xml', 'XML')], max_length=10)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField(default=0)),
                ('checksum', models.CharField(blank=True, help_text='SHA256 checksum of the file', max_length=64)),
                ('export_settings', models.JSONField(default=dict, help_text='Settings used for the export')),
                ('download_count', models.IntegerField(default=0)),
                ('last_downloaded', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When the export file expires', null=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='reports.generatedreport')),
            ],
            options={
                'verbose_name': 'Report Export',
                'verbose_name_plural': 'Report Exports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('academic', 'Academic Report'), ('attendance', 'Attendance Report'), ('financial', 'Financial Report'), ('performance', 'Performance Report'), ('analytics', 'Analytics Report'), ('custom', 'Custom Report')], max_length=20)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON'), ('html', 'HTML')], default='pdf', max_length=10)),
                ('template_config', models.JSONField(default=dict, help_text='JSON configuration for report layout and fields')),
                ('query_config', models.JSONField(default=dict, help_text='JSON configuration for data queries')),
                ('header_template', models.TextField(blank=True, help_text='HTML template for report header')),
                ('footer_template', models.TextField(blank=True, help_text='HTML template for report footer')),
                ('css_styles', models.TextField(blank=True, help_text='Custom CSS styles for the report')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this template is available to all users')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_report_templates', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportParameter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('display_name', models.CharField(max_length=200)),
                ('parameter_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('date', 'Date'), ('datetime', 'Date & Time'), ('select', 'Select'), ('multiselect', 'Multi-Select'), ('boolean', 'Boolean'), ('range', 'Range')], max_length=20)),
                ('default_value', models.TextField(blank=True, help_text='Default value for the parameter')),
                ('options', models.JSONField(blank=True, default=list, help_text='Options for select/multiselect parameters')),
                ('validation_rules', models.JSONField(blank=True, default=dict, help_text='Validation rules for the parameter')),
                ('is_required', models.BooleanField(default=False)),
                ('is_visible', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0, help_text='Display order in parameter forms')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('templates', models.ManyToManyField(related_name='parameters', to='reports.reporttemplate')),
            ],
            options={
                'verbose_name': 'Report Parameter',
                'verbose_name_plural': 'Report Parameters',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.AddField(
            model_name='generatedreport',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='reports.reporttemplate'),
        ),
        migrations.CreateModel(
            name='ScheduledReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('parameters', models.JSONField(default=dict, help_text='Parameters to pass to the report template')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('custom', 'Custom')], max_length=20)),
                ('custom_schedule', models.CharField(blank=True, help_text='Cron expression for custom scheduling', max_length=200)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('email_subject', models.CharField(blank=True, max_length=200)),
                ('email_message', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('failed', 'Failed')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_schedules', to=settings.AUTH_USER_MODEL)),
                ('recipients', models.ManyToManyField(related_name='scheduled_reports', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_reports', to='reports.reporttemplate')),
            ],
            options={
                'verbose_name': 'Scheduled Report',
                'verbose_name_plural': 'Scheduled Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='generatedreport',
            name='scheduled_report',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to='reports.scheduledreport'),
        ),
    ]
