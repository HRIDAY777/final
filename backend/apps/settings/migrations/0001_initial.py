# Generated by Django 5.0 on 2025-08-23 11:34

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Configuration Name')),
                ('config_type', models.CharField(choices=[('feature_flag', 'Feature Flag'), ('api_config', 'API Configuration'), ('third_party', 'Third Party Integration'), ('custom', 'Custom Configuration')], default='custom', max_length=20, verbose_name='Configuration Type')),
                ('config_data', models.JSONField(default=dict, verbose_name='Configuration Data')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('version', models.CharField(default='1.0.0', max_length=20, verbose_name='Version')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_configs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Application Configuration',
                'verbose_name_plural': 'Application Configurations',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='settings_ap_name_05085a_idx'), models.Index(fields=['config_type'], name='settings_ap_config__24877c_idx'), models.Index(fields=['is_active'], name='settings_ap_is_acti_58d2b8_idx')],
            },
        ),
        migrations.CreateModel(
            name='FeatureFlag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Feature Name')),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='Feature Key')),
                ('flag_type', models.CharField(choices=[('boolean', 'Boolean'), ('percentage', 'Percentage'), ('user_list', 'User List'), ('date_range', 'Date Range')], default='boolean', max_length=20, verbose_name='Flag Type')),
                ('is_enabled', models.BooleanField(default=False, verbose_name='Is Enabled')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('percentage_enabled', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Percentage Enabled')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_features', to=settings.AUTH_USER_MODEL)),
                ('enabled_users', models.ManyToManyField(blank=True, related_name='enabled_features', to=settings.AUTH_USER_MODEL, verbose_name='Enabled Users')),
            ],
            options={
                'verbose_name': 'Feature Flag',
                'verbose_name_plural': 'Feature Flags',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['key'], name='settings_fe_key_6084af_idx'), models.Index(fields=['is_enabled'], name='settings_fe_is_enab_8c58e4_idx'), models.Index(fields=['flag_type'], name='settings_fe_flag_ty_fae5e6_idx')],
            },
        ),
        migrations.CreateModel(
            name='SettingAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('setting_key', models.CharField(max_length=100, verbose_name='Setting Key')),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('activated', 'Activated'), ('deactivated', 'Deactivated')], max_length=20, verbose_name='Action')),
                ('old_value', models.TextField(blank=True, verbose_name='Old Value')),
                ('new_value', models.TextField(blank=True, verbose_name='New Value')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='setting_changes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Setting Audit Log',
                'verbose_name_plural': 'Setting Audit Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['setting_key'], name='settings_se_setting_d0f8da_idx'), models.Index(fields=['action'], name='settings_se_action_99fcc2_idx'), models.Index(fields=['user'], name='settings_se_user_id_45cc92_idx'), models.Index(fields=['timestamp'], name='settings_se_timesta_75150c_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='Setting Key')),
                ('value', models.TextField(verbose_name='Setting Value')),
                ('setting_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON'), ('email', 'Email'), ('url', 'URL'), ('file', 'File')], default='string', max_length=20, verbose_name='Setting Type')),
                ('category', models.CharField(choices=[('general', 'General'), ('email', 'Email'), ('security', 'Security'), ('database', 'Database'), ('file_upload', 'File Upload'), ('notification', 'Notification'), ('payment', 'Payment'), ('integration', 'Integration'), ('appearance', 'Appearance'), ('performance', 'Performance')], default='general', max_length=20, verbose_name='Category')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_public', models.BooleanField(default=False, verbose_name='Is Public')),
                ('is_required', models.BooleanField(default=False, verbose_name='Is Required')),
                ('validation_rules', models.JSONField(blank=True, default=dict, verbose_name='Validation Rules')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Setting',
                'verbose_name_plural': 'System Settings',
                'ordering': ['category', 'key'],
                'indexes': [models.Index(fields=['key'], name='settings_sy_key_d49ddf_idx'), models.Index(fields=['category'], name='settings_sy_categor_7c2f34_idx'), models.Index(fields=['is_public'], name='settings_sy_is_publ_e7e11d_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=100, verbose_name='Preference Key')),
                ('value', models.TextField(verbose_name='Preference Value')),
                ('preference_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON')], default='string', max_length=20, verbose_name='Preference Type')),
                ('category', models.CharField(choices=[('interface', 'Interface'), ('notification', 'Notification'), ('privacy', 'Privacy'), ('accessibility', 'Accessibility'), ('language', 'Language'), ('timezone', 'Timezone'), ('theme', 'Theme'), ('dashboard', 'Dashboard')], default='interface', max_length=20, verbose_name='Category')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_default', models.BooleanField(default=False, verbose_name='Is Default')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Preference',
                'verbose_name_plural': 'User Preferences',
                'ordering': ['category', 'key'],
                'indexes': [models.Index(fields=['user', 'key'], name='settings_us_user_id_991ca1_idx'), models.Index(fields=['category'], name='settings_us_categor_46de8b_idx')],
                'unique_together': {('user', 'key')},
            },
        ),
    ]
