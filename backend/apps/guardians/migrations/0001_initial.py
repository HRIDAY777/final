# Generated by Django 5.0 on 2025-08-23 11:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0001_initial'),
        ('students', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guardian_id', models.CharField(max_length=20, unique=True, verbose_name='Guardian ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='Middle Name')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, verbose_name='Gender')),
                ('blood_group', models.CharField(blank=True, max_length=5, verbose_name='Blood Group')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=15, verbose_name='Phone')),
                ('alternate_phone', models.CharField(blank=True, max_length=15, verbose_name='Alternate Phone')),
                ('address', models.TextField(verbose_name='Address')),
                ('city', models.CharField(max_length=50, verbose_name='City')),
                ('state', models.CharField(max_length=50, verbose_name='State')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Postal Code')),
                ('country', models.CharField(default='Bangladesh', max_length=50, verbose_name='Country')),
                ('occupation', models.CharField(blank=True, max_length=100, verbose_name='Occupation')),
                ('employer', models.CharField(blank=True, max_length=100, verbose_name='Employer')),
                ('annual_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Annual Income')),
                ('education_level', models.CharField(blank=True, choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('higher_secondary', 'Higher Secondary'), ('bachelor', 'Bachelor'), ('master', 'Master'), ('phd', 'PhD'), ('other', 'Other')], max_length=50, verbose_name='Education Level')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='active', max_length=20, verbose_name='Status')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='guardian_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Guardian',
                'verbose_name_plural': 'Guardians',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='GuardianDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('id_proof', 'ID Proof'), ('address_proof', 'Address Proof'), ('income_certificate', 'Income Certificate'), ('employment_certificate', 'Employment Certificate'), ('marriage_certificate', 'Marriage Certificate'), ('divorce_certificate', 'Divorce Certificate'), ('death_certificate', 'Death Certificate'), ('guardianship_certificate', 'Guardianship Certificate'), ('other', 'Other')], max_length=30, verbose_name='Document Type')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('file', models.FileField(upload_to='guardians/documents/', verbose_name='File')),
                ('file_size', models.PositiveIntegerField(blank=True, verbose_name='File Size (bytes)')),
                ('file_type', models.CharField(blank=True, max_length=20, verbose_name='File Type')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is Verified')),
                ('verified_date', models.DateTimeField(blank=True, null=True, verbose_name='Verified Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('guardian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='guardians.guardian')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_guardian_documents', to=settings.AUTH_USER_MODEL, verbose_name='Verified By')),
            ],
            options={
                'verbose_name': 'Guardian Document',
                'verbose_name_plural': 'Guardian Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GuardianNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('notification_type', models.CharField(choices=[('academic', 'Academic'), ('attendance', 'Attendance'), ('fee', 'Fee'), ('event', 'Event'), ('emergency', 'Emergency'), ('general', 'General')], max_length=20, verbose_name='Notification Type')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20, verbose_name='Priority')),
                ('email_sent', models.BooleanField(default=False, verbose_name='Email Sent')),
                ('sms_sent', models.BooleanField(default=False, verbose_name='SMS Sent')),
                ('push_sent', models.BooleanField(default=False, verbose_name='Push Sent')),
                ('read', models.BooleanField(default=False, verbose_name='Read')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('guardian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='guardians.guardian')),
                ('related_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.event', verbose_name='Related Event')),
                ('related_student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.student', verbose_name='Related Student')),
            ],
            options={
                'verbose_name': 'Guardian Notification',
                'verbose_name_plural': 'Guardian Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GuardianProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, upload_to='guardians/profiles/', verbose_name='Profile Picture')),
                ('emergency_contact', models.CharField(blank=True, max_length=15, verbose_name='Emergency Contact')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, verbose_name='Emergency Contact Name')),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50, verbose_name='Emergency Contact Relationship')),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed')], max_length=20, verbose_name='Marital Status')),
                ('spouse_name', models.CharField(blank=True, max_length=100, verbose_name='Spouse Name')),
                ('spouse_occupation', models.CharField(blank=True, max_length=100, verbose_name='Spouse Occupation')),
                ('spouse_phone', models.CharField(blank=True, max_length=15, verbose_name='Spouse Phone')),
                ('total_children', models.PositiveIntegerField(default=1, verbose_name='Total Children')),
                ('children_in_school', models.PositiveIntegerField(default=1, verbose_name='Children in School')),
                ('preferred_contact_method', models.CharField(choices=[('phone', 'Phone'), ('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp')], default='phone', max_length=20, verbose_name='Preferred Contact Method')),
                ('preferred_contact_time', models.CharField(choices=[('morning', 'Morning (8 AM - 12 PM)'), ('afternoon', 'Afternoon (12 PM - 4 PM)'), ('evening', 'Evening (4 PM - 8 PM)'), ('night', 'Night (8 PM - 12 AM)')], default='evening', max_length=20, verbose_name='Preferred Contact Time')),
                ('facebook_profile', models.URLField(blank=True, verbose_name='Facebook Profile')),
                ('linkedin_profile', models.URLField(blank=True, verbose_name='LinkedIn Profile')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('guardian', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='guardians.guardian')),
            ],
            options={
                'verbose_name': 'Guardian Profile',
                'verbose_name_plural': 'Guardian Profiles',
            },
        ),
        migrations.CreateModel(
            name='GuardianSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email Notifications')),
                ('sms_notifications', models.BooleanField(default=True, verbose_name='SMS Notifications')),
                ('push_notifications', models.BooleanField(default=True, verbose_name='Push Notifications')),
                ('academic_notifications', models.BooleanField(default=True, verbose_name='Academic Notifications')),
                ('attendance_notifications', models.BooleanField(default=True, verbose_name='Attendance Notifications')),
                ('fee_notifications', models.BooleanField(default=True, verbose_name='Fee Notifications')),
                ('event_notifications', models.BooleanField(default=True, verbose_name='Event Notifications')),
                ('emergency_notifications', models.BooleanField(default=True, verbose_name='Emergency Notifications')),
                ('profile_visibility', models.CharField(choices=[('public', 'Public'), ('staff_only', 'Staff Only'), ('private', 'Private')], default='staff_only', max_length=20, verbose_name='Profile Visibility')),
                ('theme_preference', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('auto', 'Auto')], default='auto', max_length=20, verbose_name='Theme Preference')),
                ('language_preference', models.CharField(choices=[('en', 'English'), ('bn', 'Bangla')], default='en', max_length=10, verbose_name='Language Preference')),
                ('communication_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('as_needed', 'As Needed')], default='as_needed', max_length=20, verbose_name='Communication Frequency')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('guardian', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='guardians.guardian')),
            ],
            options={
                'verbose_name': 'Guardian Settings',
                'verbose_name_plural': 'Guardian Settings',
            },
        ),
        migrations.CreateModel(
            name='GuardianStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(choices=[('father', 'Father'), ('mother', 'Mother'), ('grandfather', 'Grandfather'), ('grandmother', 'Grandmother'), ('uncle', 'Uncle'), ('aunt', 'Aunt'), ('brother', 'Brother'), ('sister', 'Sister'), ('guardian', 'Legal Guardian'), ('other', 'Other')], max_length=20, verbose_name='Relationship')),
                ('is_primary_guardian', models.BooleanField(default=False, verbose_name='Is Primary Guardian')),
                ('is_emergency_contact', models.BooleanField(default=False, verbose_name='Is Emergency Contact')),
                ('is_fee_payer', models.BooleanField(default=False, verbose_name='Is Fee Payer')),
                ('is_authorized_pickup', models.BooleanField(default=False, verbose_name='Is Authorized Pickup')),
                ('can_view_academic_records', models.BooleanField(default=True, verbose_name='Can View Academic Records')),
                ('can_view_attendance', models.BooleanField(default=True, verbose_name='Can View Attendance')),
                ('can_view_fees', models.BooleanField(default=True, verbose_name='Can View Fees')),
                ('can_receive_notifications', models.BooleanField(default=True, verbose_name='Can Receive Notifications')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('guardian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='guardians.guardian')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guardian_relationships', to='students.student')),
            ],
            options={
                'verbose_name': 'Guardian Student',
                'verbose_name_plural': 'Guardian Students',
                'ordering': ['guardian__first_name', 'student__first_name'],
            },
        ),
        migrations.AddIndex(
            model_name='guardian',
            index=models.Index(fields=['guardian_id'], name='guardians_g_guardia_0dd727_idx'),
        ),
        migrations.AddIndex(
            model_name='guardian',
            index=models.Index(fields=['status'], name='guardians_g_status_05436d_idx'),
        ),
        migrations.AddIndex(
            model_name='guardian',
            index=models.Index(fields=['occupation'], name='guardians_g_occupat_c25cb9_idx'),
        ),
        migrations.AddIndex(
            model_name='guardian',
            index=models.Index(fields=['is_active'], name='guardians_g_is_acti_548762_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='guardianstudent',
            unique_together={('guardian', 'student')},
        ),
    ]
