version: '3.8'

services:
  # PostgreSQL Database (Development)
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: educore_dev
      POSTGRES_USER: educore_user
      POSTGRES_PASSWORD: educore_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - educore_dev_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U educore_user -d educore_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (Development)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - educore_dev_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend Application (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      - DJANGO_SETTINGS_ENV=dev
      - DATABASE_URL=postgresql://educore_user:educore_password@db:5432/educore_dev
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    volumes:
      - ./backend:/app
      - ./backend/logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - educore_dev_network
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  educore_dev_network:
    driver: bridge
